!function(e){function t(t){for(var r,i,l=t[0],u=t[1],c=t[2],f=0,d=[];f<l.length;f++)i=l[f],o[i]&&d.push(o[i][0]),o[i]=0;for(r in u)Object.prototype.hasOwnProperty.call(u,r)&&(e[r]=u[r]);for(s&&s(t);d.length;)d.shift()();return a.push.apply(a,c||[]),n()}function n(){for(var e,t=0;t<a.length;t++){for(var n=a[t],r=!0,l=1;l<n.length;l++){var u=n[l];0!==o[u]&&(r=!1)}r&&(a.splice(t--,1),e=i(i.s=n[0]))}return e}var r={},o={0:0},a=[];function i(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=r,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="";var l=window.webpackJsonp=window.webpackJsonp||[],u=l.push.bind(l);l.push=t,l=l.slice();for(var c=0;c<l.length;c++)t(l[c]);var s=u;a.push([12,1]),n()}({12:function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),a=n(2),i=n.n(a);function l(e){var t=e.value,n=e.onClick,r=e.squareTestId;return o.a.createElement("button",{className:"square",onClick:n,"data-testid":r,type:"button"},t)}function u(e){var t=e.squares,n=e.onClick,r=e.testId,a=e.className;function i(e,r){return o.a.createElement(l,{value:t[e],onClick:function(){return n(e)},squareTestId:r})}return o.a.createElement("div",{"data-testid":r,className:a},o.a.createElement("div",{className:"table-row"},i("0","topLeftSquare"),i("1","topMiddleSquare"),i("2","topRightSquare")),o.a.createElement("div",{className:"table-row"},i("3","centerLeftSquare"),i("4","centerMiddleSquare"),i("5","centerRightSquare")),o.a.createElement("div",{className:"table-row"},i("6","bottomLeftSquare"),i("7","bottomMiddleSquare"),i("8","bottomRightSquare")))}function c(e){var t=e.gameInfo;return o.a.createElement("div",{className:"game-status","data-testid":"gameStatus"},t)}function s(e){var t=e.onClick,n=e.children,r=e.highlight,a=void 0!==r&&r?"current-move-button":"move-button";return o.a.createElement("button",{type:"button",className:a,onClick:t},n)}function f(e){for(var t=null,n=function(n){var r=3*n,o=e.slice(r,r+3);t=d(o)||t;var a=e.filter(function(e,t){return t%3===n});t=d(a)||t},r=0;r<3;r+=1)n(r);var o=[e[0],e[4],e[8]];t=d(o)||t;var a=[e[2],e[4],e[6]];return t=d(a)||t}function d(e){return e.every(function(e){return"X"===e})?"X":e.every(function(e){return"O"===e})?"O":null}function p(e){return f(e.map(function(e){return f(e.squares)}))}function b(e){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t){return!t||"object"!==b(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function v(e,t){return(v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var g=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=y(this,h(t).call(this,e))).state={history:[{squares:Array(9).fill(null)}],stepNumber:0,xIsNext:!0},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}(t,o.a.Component),function(e,t,n){t&&m(e.prototype,t),n&&m(e,n)}(t,[{key:"getNextValue",value:function(){return this.state.xIsNext?"X":"O"}},{key:"jumpTo",value:function(e){this.setState({stepNumber:e,xIsNext:e%2==0})}},{key:"handleClick",value:function(e){var t=this.state,n=t.xIsNext,r=t.history,o=t.stepNumber,a=r.slice(0,o+1),i=a[a.length-1].squares;if(!f(i)&&!i[e]){var l=i.slice();l[e]=this.getNextValue(),this.setState({history:a.concat([{squares:l}]),stepNumber:a.length,xIsNext:!n})}}},{key:"render",value:function(){var e=this,t=this.state,n=t.history,r=t.stepNumber,a=n[r].squares,i=f(a),l=i?"Winner: ".concat(i):"Next player: ".concat(this.getNextValue()),d=n.map(function(t,n){var a=n?"Go to move ".concat(n):"Go to game start";return o.a.createElement("li",{key:n},o.a.createElement(s,{highlight:r===n,onClick:function(){e.jumpTo(n)}},a))});return o.a.createElement("div",{className:"game"},o.a.createElement("div",{className:"game-board"},o.a.createElement(u,{squares:a,onClick:function(t){return e.handleClick(t)}})),o.a.createElement("div",{className:"game-info"},o.a.createElement(c,{gameInfo:l}),o.a.createElement("ol",null,d)))}}]),t}();function x(e){var t=e.name;return o.a.createElement("h1",null,"Tic-tac-toe in ",t,"!")}function E(e){var t=e.history.map(function(e){return{boards:w(e.boards)}});return Object.assign({},e,{nextPlayer:e.nextPlayer,history:t})}function w(e){return e.map(function(e){return Object.assign({},e,{isActive:e.isActive,squares:e.squares.slice()})})}var k={playSquare:function(e,t){var n=t.boardIndex,r=t.squareIndex,o=E(e),a=w(o.history[e.pointInHistory].boards);if(p(a))return o;var i=a[n];if(!i.isActive||null!==i.squares[r]||f(i.squares))return o;i.squares[r]=o.nextPlayer;var l=a.map(function(e,t){var o=t===parseInt(r,10);return Object.assign({},e,{isActive:!!function(e,t){var n=t.squareIndex;return!!f(e[n].squares)}(a,{boardIndex:n,squareIndex:r})||o})});o.nextPlayer=function(e,t,n){return"X"===n.nextPlayer?"O":"X"}(0,0,e);var u=o.history.slice(0,e.pointInHistory+1);return u.push({boards:l}),o.history=u,o.pointInHistory=u.length-1,o},getInitialState:function(){return{nextPlayer:"X",history:[{boards:Array(9).fill().map(function(){return{squares:Array(9).fill(null),isActive:!0}})}],pointInHistory:0}},timeTravel:function(e,t){var n=t.pointInHistory,r=E(e);return r.pointInHistory=n,r.nextPlayer=n%2==0?"X":"O",r},deepCopyGameState:E};function q(e){return(q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(e){return(S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function j(e,t){return(j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function I(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var N=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=function(e,t){return!t||"object"!==q(t)&&"function"!=typeof t?I(e):t}(this,S(t).call(this,e))).state=k.getInitialState(),n.jumpTo=n.jumpTo.bind(I(I(n))),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(t,o.a.Component),function(e,t,n){t&&O(e.prototype,t),n&&O(e,n)}(t,[{key:"getCurrentPlayer",value:function(){return this.state.nextPlayer}},{key:"handleClick",value:function(e,t){this.setState(function(n){return k.playSquare(n,{boardIndex:e,squareIndex:t})})}},{key:"jumpTo",value:function(e){this.setState(function(t){return k.timeTravel(t,{pointInHistory:e})})}},{key:"renderBoard",value:function(e,t,n){var r=this,a=t[e],i="table-cell table-board-border ".concat(function(e){return f(e.squares)?"lightgreen-board":e.isActive?"":"lightred-board"}(a));return o.a.createElement(u,{className:i,squares:a.squares,testId:n,onClick:function(t){return r.handleClick(e,t)}})}},{key:"render",value:function(){var e=this.state,t=e.nextPlayer,n=e.history,r=e.pointInHistory,a=n[r].boards,i=p(a),l=i?"Winner: ".concat(i):"Next player: ".concat(t);return o.a.createElement("div",null,o.a.createElement("div",null,this.renderBoard(0,a,"topLeftBoard"),this.renderBoard(1,a,"topMiddleBoard"),this.renderBoard(2,a,"topRightBoard")),o.a.createElement("div",null,this.renderBoard(3,a,"centerLeftBoard"),this.renderBoard(4,a,"centerMiddleBoard"),this.renderBoard(5,a,"centerRightBoard")),o.a.createElement("div",null,this.renderBoard(6,a,"bottomLeftBoard"),this.renderBoard(7,a,"bottomMiddleBoard"),this.renderBoard(8,a,"bottomRightBoard")),o.a.createElement("div",{className:"game-info"},o.a.createElement(c,{gameInfo:l}),o.a.createElement("ol",null,n.map(function(e,t,n,r){var a=0===r?"Go to game start":"Go to move ".concat(r);return o.a.createElement("li",{key:r},o.a.createElement(s,{onClick:function(){return e(r)},highlight:t===r},a))}.bind(null,this.jumpTo,r)))))}}]),t}();n(7);var A=document.createElement("div");document.body.appendChild(A),i.a.render(o.a.createElement(function(){return o.a.createElement("div",null,o.a.createElement(x,{name:"React"}),o.a.createElement("div",{className:"table"},o.a.createElement("div",{className:"table-cell"},o.a.createElement(N,null)),o.a.createElement("div",{className:"table-cell table-large-padding"},o.a.createElement(g,null))))},null),A)},7:function(e,t,n){var r=n(8);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(10)(r,o);r.locals&&(e.exports=r.locals)},8:function(e,t,n){(e.exports=n(9)(!1)).push([e.i,'body {\n  font: 14px "Century Gothic", Futura, sans-serif;\n  margin: 20px;\n}\n\n.lightgreen-board button {\n  background-color: #e6ffe6;\n}\n\n.lightred-board button {\n  background-color: MistyRose;\n}\n\nol, ul {\n  padding-left: 30px;\n}\n\n.move-button {\n  background-color: white;\n  border-color: #AAAAAA;\n  border: solid 1px;\n  color: #AAAAAA;\n  padding: 3px 30px;\n  margin-bottom: 3px;\n  text-align: center;\n  box-shadow: none;\n}\n\n.current-move-button {\n  background-color: white;\n  color: #111111;\n  border: solid 1px;\n  border-color: #111111;\n  padding: 3px 30px;\n  margin-bottom: 3px;\n  text-align: center;\n  box-shadow: none;\n}\n\n.current-move-button:hover {\n  background-color: #111111;\n  color: white;\n}\n\n.move-button:hover {\n  background-color: #AAAAAA;\n  color: white;\n}\n\n.table {\n  display: table;\n}\n\n.table-row {\n  display: table-row;\n}\n\n.table-column {\n  display: table-column;\n}\n\n.table-cell {\n  display: table-cell;\n}\n\n.table-large-padding {\n  padding-left: 50px;\n}\n\n.table-board-border {\n  border: 2px solid #fff;\n}\n\n.status {\n  margin-bottom: 10px;\n}\n\n.square {\n  background: #fff;\n  border: 1px solid #999;\n  float: left;\n  font-size: 24px;\n  font-weight: bold;\n  line-height: 34px;\n  height: 34px;\n  margin-right: -1px;\n  margin-top: -1px;\n  padding: 0;\n  text-align: center;\n  width: 34px;\n}\n\n.square:focus {\n  outline: none;\n}\n\n.kbd-navigation .square:focus {\n  background: #ddd;\n}\n\n.game {\n  display: flex;\n  flex-direction: row;\n}\n\n.game-info {\n  margin-left: 20px;\n}\n\n.red-font {\n  color: red\n}\n\n.blue-font {\n  color: blue\n}\n\n.green-font {\n  color: green\n}\n\n.yellow-font {\n  color: yellow\n}\n\n.purple-font {\n  color: purple\n}\n\n.orange-font {\n  color: orange\n}\n',""])}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,